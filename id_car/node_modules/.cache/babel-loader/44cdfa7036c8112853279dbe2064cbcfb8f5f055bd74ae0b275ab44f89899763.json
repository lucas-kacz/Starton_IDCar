{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive - De Vinci\\\\Pictures\\\\Documents\\\\Esilv\\\\A4\\\\Hackaton\\\\Starton_IDCar\\\\id_car\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = props => {\n  _s();\n  const [isConnecting, setIsConnecting] = useState(false);\n  const detectProvider = () => {\n    let provider;\n    if (window.ethereum) {\n      provider = window.ethereum;\n    } else if (window.web3) {\n      provider = window.web3.currentProvider;\n    } else {\n      window.alert(\"No ethereum browser detected ! Check Metamask !\");\n    }\n    return provider;\n  };\n  const onLoginHandler = async () => {\n    const provider = detectProvider();\n    if (provider) {\n      if (provider !== window.ethereum) {\n        console.error(\"Not window.ethereum provider. Do you have multiple wallets installed ?\");\n      }\n      setIsConnecting(true);\n      await provider.request({\n        method: \"eth_requestAccounts\"\n      });\n      setIsConnecting(false);\n      props.onLogin(provider);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onLoginHandler,\n      className: classes.button,\n      type: \"button\",\n      children: [!isConnecting && \"Connect\", isConnecting && \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"wFTzW8g/nX5ciJ7yP5KH8paCcIk=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","Card","classes","Login","props","isConnecting","setIsConnecting","detectProvider","provider","window","ethereum","web3","currentProvider","alert","onLoginHandler","console","error","request","method","onLogin","login","button"],"sources":["C:/Users/Admin/OneDrive - De Vinci/Pictures/Documents/Esilv/A4/Hackaton/Starton_IDCar/id_car/src/components/Login/Login.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport Card from \"../UI/Card/Card\";\r\nimport classes from \"./Login.module.css\"\r\n\r\nconst Login = (props) => {\r\n\r\n    const[isConnecting, setIsConnecting] = useState(false);\r\n\r\n    const detectProvider = () => {\r\n        let provider;\r\n        if(window.ethereum) {\r\n            provider = window.ethereum;\r\n        }else if (window.web3) {\r\n            provider = window.web3.currentProvider;\r\n        }else {\r\n            window.alert(\"No ethereum browser detected ! Check Metamask !\")\r\n\r\n        }\r\n        return provider;\r\n    };\r\n\r\n\r\n    const onLoginHandler = async () => {\r\n        const provider = detectProvider();\r\n        if (provider) {\r\n            if (provider !== window.ethereum){\r\n                console.error(\"Not window.ethereum provider. Do you have multiple wallets installed ?\")\r\n            }\r\n            setIsConnecting(true);\r\n            await provider.request({\r\n                method : \"eth_requestAccounts\",\r\n            });\r\n            setIsConnecting(false);\r\n            props.onLogin(provider);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.login}>\r\n            <button onClick={onLoginHandler} className={classes.button} type=\"button\">\r\n                {!isConnecting && \"Connect\"}\r\n                {isConnecting && \"Loading...\"}\r\n            </button>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,OAAO,MAAM,oBAAoB;AAAA;AAExC,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAA;EAErB,MAAK,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEtD,MAAMO,cAAc,GAAG,MAAM;IACzB,IAAIC,QAAQ;IACZ,IAAGC,MAAM,CAACC,QAAQ,EAAE;MAChBF,QAAQ,GAAGC,MAAM,CAACC,QAAQ;IAC9B,CAAC,MAAK,IAAID,MAAM,CAACE,IAAI,EAAE;MACnBH,QAAQ,GAAGC,MAAM,CAACE,IAAI,CAACC,eAAe;IAC1C,CAAC,MAAK;MACFH,MAAM,CAACI,KAAK,CAAC,iDAAiD,CAAC;IAEnE;IACA,OAAOL,QAAQ;EACnB,CAAC;EAGD,MAAMM,cAAc,GAAG,YAAY;IAC/B,MAAMN,QAAQ,GAAGD,cAAc,EAAE;IACjC,IAAIC,QAAQ,EAAE;MACV,IAAIA,QAAQ,KAAKC,MAAM,CAACC,QAAQ,EAAC;QAC7BK,OAAO,CAACC,KAAK,CAAC,wEAAwE,CAAC;MAC3F;MACAV,eAAe,CAAC,IAAI,CAAC;MACrB,MAAME,QAAQ,CAACS,OAAO,CAAC;QACnBC,MAAM,EAAG;MACb,CAAC,CAAC;MACFZ,eAAe,CAAC,KAAK,CAAC;MACtBF,KAAK,CAACe,OAAO,CAACX,QAAQ,CAAC;IAC3B;EACJ,CAAC;EAED,oBACI,QAAC,IAAI;IAAC,SAAS,EAAEN,OAAO,CAACkB,KAAM;IAAA,uBAC3B;MAAQ,OAAO,EAAEN,cAAe;MAAC,SAAS,EAAEZ,OAAO,CAACmB,MAAO;MAAC,IAAI,EAAC,QAAQ;MAAA,WACpE,CAAChB,YAAY,IAAI,SAAS,EAC1BA,YAAY,IAAI,YAAY;IAAA;MAAA;MAAA;MAAA;IAAA;EACxB;IAAA;IAAA;IAAA;EAAA,QACN;AAEf,CAAC;AAAC,GAzCIF,KAAK;AAAA,KAALA,KAAK;AA2CX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}